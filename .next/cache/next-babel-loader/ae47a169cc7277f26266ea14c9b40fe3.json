{"ast":null,"code":"var _jsxFileName = \"/Users/conorogrady/react_workspace/corona/components/Stats.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nexport default function Stats() {\n  const {\n    0: stats,\n    1: setStats\n  } = useState();\n  useEffect(() => {\n    fetch(`https://covid19.mathdro.id/api/`).then(data => data.json()).then(res => {\n      console.log(res);\n      setStats(res);\n    });\n  }, []); // empty array as second argument ensures useEffect function only runs once on initial render: https://css-tricks.com/run-useeffect-only-once/ \n\n  if (!stats) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"loading ........\");\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-evenly\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.statContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Confirmed\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, stats.confirmed.value.toLocaleString())), __jsx(\"div\", {\n    style: styles.statContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Recovered\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, stats.recovered.value.toLocaleString())), __jsx(\"div\", {\n    style: styles.statContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Deaths\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, stats.deaths.value.toLocaleString())));\n}\nconst styles = {\n  statContainer: {\n    border: '1px solid',\n    borderRadius: '7px',\n    padding: '20px 0px',\n    flex: 1,\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    margin: \"15px 50px\"\n  }\n};","map":{"version":3,"sources":["/Users/conorogrady/react_workspace/corona/components/Stats.js"],"names":["useState","useEffect","Stats","stats","setStats","fetch","then","data","json","res","console","log","display","justifyContent","styles","statContainer","confirmed","value","toLocaleString","recovered","deaths","border","borderRadius","padding","flex","alignItems","flexDirection","margin"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAAE,iCAAF,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAL,MAAAA,QAAQ,CAACK,GAAD,CAAR;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT,CAH4B,CAW5B;;AAEA,MAAG,CAACN,KAAJ,EAAW;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH;;AAED,SACI;AAAK,IAAA,KAAK,EAAE;AAACS,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,cAAc,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAEC,MAAM,CAACC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOZ,KAAK,CAACa,SAAN,CAAgBC,KAAhB,CAAsBC,cAAtB,EAAP,CAFJ,CADJ,EAKI;AAAK,IAAA,KAAK,EAAEJ,MAAM,CAACC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOZ,KAAK,CAACgB,SAAN,CAAgBF,KAAhB,CAAsBC,cAAtB,EAAP,CAFJ,CALJ,EASI;AAAK,IAAA,KAAK,EAAEJ,MAAM,CAACC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOZ,KAAK,CAACiB,MAAN,CAAaH,KAAb,CAAmBC,cAAnB,EAAP,CAFJ,CATJ,CADJ;AAgBH;AAED,MAAMJ,MAAM,GAAG;AACXC,EAAAA,aAAa,EAAE;AACXM,IAAAA,MAAM,EAAE,WADG;AAEXC,IAAAA,YAAY,EAAE,KAFH;AAGXC,IAAAA,OAAO,EAAE,UAHE;AAIXC,IAAAA,IAAI,EAAE,CAJK;AAKXX,IAAAA,cAAc,EAAE,cALL;AAMXY,IAAAA,UAAU,EAAE,QAND;AAOXb,IAAAA,OAAO,EAAE,MAPE;AAQXc,IAAAA,aAAa,EAAE,QARJ;AASXC,IAAAA,MAAM,EAAE;AATG;AADJ,CAAf","sourcesContent":["import { useState, useEffect } from \"react\"\n\nexport default function Stats() {\n    const [stats, setStats] = useState();\n\n    useEffect(() => {\n        fetch(`https://covid19.mathdro.id/api/`)\n        .then(data => data.json())\n        .then(res => {    \n            console.log(res)\n            setStats(res)            \n        })        \n    }, [])\n    // empty array as second argument ensures useEffect function only runs once on initial render: https://css-tricks.com/run-useeffect-only-once/ \n\n    if(!stats) {\n        return <p>loading ........</p>\n    }\n\n    return (\n        <div style={{display: \"flex\", justifyContent: \"space-evenly\"}}>\n            <div style={styles.statContainer}>\n                <h2>Confirmed</h2>\n                <span>{stats.confirmed.value.toLocaleString()}</span>\n            </div>\n            <div style={styles.statContainer}>\n                <h2>Recovered</h2>\n                <span>{stats.recovered.value.toLocaleString()}</span>\n            </div>\n            <div style={styles.statContainer}>\n                <h2>Deaths</h2>\n                <span>{stats.deaths.value.toLocaleString()}</span>\n            </div>\n        </div>\n    )\n}\n\nconst styles = {\n    statContainer: {\n        border: '1px solid',\n        borderRadius: '7px',\n        padding: '20px 0px',\n        flex: 1,\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        margin: \"15px 50px\"\n    }\n}"]},"metadata":{},"sourceType":"module"}