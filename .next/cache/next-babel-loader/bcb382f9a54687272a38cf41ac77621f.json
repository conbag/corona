{"ast":null,"code":"var _jsxFileName = \"/Users/conorogrady/react_workspace/corona/components/CountryMap.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\"; // url to a valid topojson file\n\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nexport default function CountryMap({\n  setTooltipContent\n}) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(ComposableMap, {\n    \"data-tip\": \"\",\n    projectionConfig: {\n      scale: 155,\n      rotation: [-11, 0, 0]\n    },\n    width: 800,\n    height: 400,\n    style: {\n      width: \"100%\",\n      height: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(Geographies, {\n    geography: geoUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, ({\n    geographies\n  }) => geographies.map(geo => __jsx(Geography, {\n    key: geo.rsmKey,\n    geography: geo,\n    onMouseEnter: () => {\n      fetch(`https://covid19.mathdro.id/api/countries/${geo.properties.ISO_A2}`).then(data => data.json()).then(result => {\n        console.log(result);\n        setTooltipContent(`${geo.properties.NAME}<br><br>Confirmed: ${result.confirmed.value.toLocaleString()}<br>Recovered: ${result.recovered.value.toLocaleString()}<br>Deaths: ${result.deaths.value.toLocaleString()}`);\n      }).catch(err => setTooltipContent(`${geo.properties.NAME}<br><br>No data available`));\n    },\n    onMouseLeave: () => {\n      setTooltipContent(``);\n    },\n    style: {\n      default: {\n        fill: \"#D6D6DA\",\n        outline: \"none\"\n      },\n      hover: {\n        fill: \"#F53\",\n        outline: \"none\"\n      },\n      pressed: {\n        fill: \"#E42\",\n        outline: \"none\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/conorogrady/react_workspace/corona/components/CountryMap.js"],"names":["React","ComposableMap","Geographies","Geography","geoUrl","CountryMap","setTooltipContent","scale","rotation","width","height","geographies","map","geo","rsmKey","fetch","properties","ISO_A2","then","data","json","result","console","log","NAME","confirmed","value","toLocaleString","recovered","deaths","catch","err","default","fill","outline","hover","pressed"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,QAIO,mBAJP,C,CAMA;;AACA,MAAMC,MAAM,GAAG,wGAAf;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA2C;AACtD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,aAAD;AACI,gBAAS,EADb;AAEI,IAAA,gBAAgB,EAAE;AACdC,MAAAA,KAAK,EAAE,GADO;AAEdC,MAAAA,QAAQ,EAAE,CAAC,CAAC,EAAF,EAAM,CAAN,EAAS,CAAT;AAFI,KAFtB;AAMI,IAAA,KAAK,EAAE,GANX;AAOI,IAAA,MAAM,EAAE,GAPZ;AAQI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAEN,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAAC;AAAEO,IAAAA;AAAF,GAAD,KAAqBA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IACrC,MAAC,SAAD;AACI,IAAA,GAAG,EAAEA,GAAG,CAACC,MADb;AAEI,IAAA,SAAS,EAAED,GAFf;AAGI,IAAA,YAAY,EAAE,MAAM;AAChBE,MAAAA,KAAK,CAAE,4CAA2CF,GAAG,CAACG,UAAJ,CAAeC,MAAO,EAAnE,CAAL,CACKC,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUG,MAAM,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAf,QAAAA,iBAAiB,CAAE,GAAEO,GAAG,CAACG,UAAJ,CAAeQ,IAAK,sBAAqBH,MAAM,CAACI,SAAP,CAAiBC,KAAjB,CAAuBC,cAAvB,EAAwC,kBAAiBN,MAAM,CAACO,SAAP,CAAiBF,KAAjB,CAAuBC,cAAvB,EAAwC,eAAcN,MAAM,CAACQ,MAAP,CAAcH,KAAd,CAAoBC,cAApB,EAAqC,EAAjM,CAAjB;AACH,OALL,EAMKG,KANL,CAMWC,GAAG,IAAIzB,iBAAiB,CAAE,GAAEO,GAAG,CAACG,UAAJ,CAAeQ,IAAK,2BAAxB,CANnC;AAOH,KAXL;AAYI,IAAA,YAAY,EAAE,MAAM;AAChBlB,MAAAA,iBAAiB,CAAE,EAAF,CAAjB;AACH,KAdL;AAeI,IAAA,KAAK,EAAE;AACH0B,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAE,SADD;AAELC,QAAAA,OAAO,EAAE;AAFJ,OADN;AAKHC,MAAAA,KAAK,EAAE;AACHF,QAAAA,IAAI,EAAE,MADH;AAEHC,QAAAA,OAAO,EAAE;AAFN,OALJ;AASHE,MAAAA,OAAO,EAAE;AACLH,QAAAA,IAAI,EAAE,MADD;AAELC,QAAAA,OAAO,EAAE;AAFJ;AATN,KAfX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADkB,CADtB,CATJ,CADA,CADJ;AAgDH","sourcesContent":["import React from \"react\"\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n} from \"react-simple-maps\"\n\n// url to a valid topojson file\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\n\nexport default function CountryMap({ setTooltipContent }) {\n    return (\n        <div>\n        <ComposableMap \n            data-tip=\"\" \n            projectionConfig={{\n                scale: 155,\n                rotation: [-11, 0, 0],\n            }}\n            width={800}\n            height={400}\n            style={{ width: \"100%\", height: \"auto\" }}>\n            <Geographies geography={geoUrl}>\n            {({ geographies }) => geographies.map(geo =>\n                <Geography \n                    key={geo.rsmKey} \n                    geography={geo} \n                    onMouseEnter={() => {\n                        fetch(`https://covid19.mathdro.id/api/countries/${geo.properties.ISO_A2}`)\n                            .then(data => data.json())\n                            .then(result => {\n                                console.log(result)\n                                setTooltipContent(`${geo.properties.NAME}<br><br>Confirmed: ${result.confirmed.value.toLocaleString()}<br>Recovered: ${result.recovered.value.toLocaleString()}<br>Deaths: ${result.deaths.value.toLocaleString()}`);\n                            })\n                            .catch(err => setTooltipContent(`${geo.properties.NAME}<br><br>No data available`))                                                                                                                           \n                    }}\n                    onMouseLeave={() => {\n                        setTooltipContent(``);\n                    }}\n                    style={{\n                        default: {\n                            fill: \"#D6D6DA\",\n                            outline: \"none\"\n                        },\n                        hover: {\n                            fill: \"#F53\",\n                            outline: \"none\"\n                        },\n                        pressed: {\n                            fill: \"#E42\",\n                            outline: \"none\"\n                        }\n                    }} \n                />\n            )}\n            </Geographies>\n        </ComposableMap>      \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}