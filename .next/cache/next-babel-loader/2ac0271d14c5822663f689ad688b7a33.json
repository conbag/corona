{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/conorogrady/react_workspace/corona/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from \"react\";\nexport default function IndexPage() {\n  return __jsx(Stats, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  });\n}\n\nfunction Stats() {\n  useStats();\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Confirmed: \")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Recovered: \")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Deaths: \")));\n}\n\nfunction useStats() {\n  var _useState = useState({}),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  useEffect(function () {\n    fetch(\"https://covid19.mathdro.id/api/\").then(function (data) {\n      return data.json();\n    }).then(function (res) {\n      console.log(res);\n      setStats(_objectSpread({}, res));\n      console.log(stats);\n      return stats;\n    });\n  }, []); // empty array as second argument ensures useEffect function only runs once on initial render: https://css-tricks.com/run-useeffect-only-once/    \n}","map":{"version":3,"sources":["/Users/conorogrady/react_workspace/corona/pages/index.js"],"names":["useState","useEffect","IndexPage","Stats","useStats","stats","setStats","fetch","then","data","json","res","console","log"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,SAAT,GAAqB;AAChC,SAAO,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH;;AAED,SAASC,KAAT,GAAiB;AACbC,EAAAA,QAAQ;AAER,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAPJ,CADJ;AAaH;;AAED,SAASA,QAAT,GAAoB;AAAA,kBACUJ,QAAQ,CAAC,EAAD,CADlB;AAAA,MACTK,KADS;AAAA,MACFC,QADE;;AAGhBL,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,KAAK,mCAAL,CACCC,IADD,CACM,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,KADV,EAECF,IAFD,CAEM,UAAAG,GAAG,EAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAL,MAAAA,QAAQ,mBAAKK,GAAL,EAAR;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,aAAOA,KAAP;AACH,KARD;AASH,GAVQ,EAUN,EAVM,CAAT,CAHgB,CAchB;AACH","sourcesContent":["import { useState, useEffect } from \"react\"\n\nexport default function IndexPage() {\n    return <Stats></Stats>\n}\n\nfunction Stats() {\n    useStats()\n\n    return (\n        <div>\n            <div>\n                <h3>Confirmed: </h3>\n            </div>\n            <div>\n                <h3>Recovered: </h3>\n            </div>\n            <div>\n                <h3>Deaths: </h3>\n            </div>\n        </div>\n    )\n}\n\nfunction useStats() {\n    const [stats, setStats] = useState({});\n\n    useEffect(() => {\n        fetch(`https://covid19.mathdro.id/api/`)\n        .then(data => data.json())\n        .then(res => {    \n            console.log(res)\n            setStats({...res})\n            \n            console.log(stats)\n            return stats\n        })        \n    }, [])\n    // empty array as second argument ensures useEffect function only runs once on initial render: https://css-tricks.com/run-useeffect-only-once/    \n}"]},"metadata":{},"sourceType":"module"}