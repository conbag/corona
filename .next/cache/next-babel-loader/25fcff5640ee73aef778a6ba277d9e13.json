{"ast":null,"code":"var _jsxFileName = \"/Users/conorogrady/react_workspace/corona/components/CountryMap.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\"; // url to a valid topojson file\n\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nexport default function CountryMap({\n  setTooltipContent\n}) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(ComposableMap, {\n    projectionConfig: {\n      scale: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(Geographies, {\n    geography: geoUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props => console.log(props))));\n}","map":{"version":3,"sources":["/Users/conorogrady/react_workspace/corona/components/CountryMap.js"],"names":["React","ComposableMap","Geographies","Geography","geoUrl","CountryMap","setTooltipContent","scale","props","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,QAIO,mBAJP,C,CAMA;;AACA,MAAMC,MAAM,GACV,wGADF;AAGA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA2C;AACxD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,gBAAgB,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAEH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMI,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CADhB,CADF,CADF,CADF;AAqCD","sourcesContent":["import React from \"react\"\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n} from \"react-simple-maps\"\n\n// url to a valid topojson file\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\n\nexport default function CountryMap({ setTooltipContent }) {\n  return (\n    <div>\n      <ComposableMap projectionConfig={{ scale: 100 }}>\n        <Geographies geography={geoUrl}>\n            {(props) => console.log(props)}\n          {/* {(geographies) => geographies.map(geo =>\n            <Geography \n                key={geo.rsmKey} \n                geography={geo} \n                onMouseEnter={() => {\n                    console.log(geo.properties);\n\n                    setTooltipContent(`TESTING 1234`);\n                }}\n                onMouseLeave={() => {\n                    setTooltipContent('');\n                }}\n                style={{\n                    default: {\n                    fill: \"#D6D6DA\",\n                    outline: \"none\"\n                    },\n                    hover: {\n                    fill: \"#F53\",\n                    outline: \"none\"\n                    },\n                    pressed: {\n                    fill: \"#E42\",\n                    outline: \"none\"\n                    }\n                }} \n            />\n          )} */}\n        </Geographies>\n      </ComposableMap>      \n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}