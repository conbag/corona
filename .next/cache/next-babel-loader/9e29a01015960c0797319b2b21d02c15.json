{"ast":null,"code":"var _jsxFileName = \"/Users/conorogrady/react_workspace/corona/components/CountryMap.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\"; // url to a valid topojson file\n\nvar geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nexport default function CountryMap(_ref) {\n  var setTooltipContent = _ref.setTooltipContent;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(ComposableMap, {\n    \"data-tip\": \"\",\n    projectionConfig: {\n      scale: 100\n    },\n    width: 400,\n    height: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(Geographies, {\n    geography: geoUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, function (_ref2) {\n    var geographies = _ref2.geographies;\n    return geographies.map(function (geo) {\n      return __jsx(Geography, {\n        key: geo.rsmKey,\n        geography: geo,\n        onMouseEnter: function onMouseEnter() {\n          console.log(geo.properties);\n          setTooltipContent(\"\".concat(geo.properties.NAME, \"<br><br>Confirmed: <br>Recovered: <br>Deaths: \"));\n        },\n        onMouseLeave: function onMouseLeave() {\n          setTooltipContent(\"\");\n        },\n        style: {\n          \"default\": {\n            fill: \"#D6D6DA\",\n            outline: \"none\"\n          },\n          hover: {\n            fill: \"#F53\",\n            outline: \"none\"\n          },\n          pressed: {\n            fill: \"#E42\",\n            outline: \"none\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    });\n  })));\n}","map":{"version":3,"sources":["/Users/conorogrady/react_workspace/corona/components/CountryMap.js"],"names":["React","ComposableMap","Geographies","Geography","geoUrl","CountryMap","setTooltipContent","scale","geographies","map","geo","rsmKey","console","log","properties","NAME","fill","outline","hover","pressed"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,QAIO,mBAJP,C,CAMA;;AACA,IAAMC,MAAM,GAAG,wGAAf;AAEA,eAAe,SAASC,UAAT,OAA2C;AAAA,MAArBC,iBAAqB,QAArBA,iBAAqB;AACxD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,gBAAS,EAAxB;AAA2B,IAAA,gBAAgB,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA7C;AAA6D,IAAA,KAAK,EAAE,GAApE;AAAyE,IAAA,MAAM,EAAE,GAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAEH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGI,WAAH,SAAGA,WAAH;AAAA,WAAqBA,WAAW,CAACC,GAAZ,CAAgB,UAAAC,GAAG;AAAA,aACvC,MAAC,SAAD;AACI,QAAA,GAAG,EAAEA,GAAG,CAACC,MADb;AAEI,QAAA,SAAS,EAAED,GAFf;AAGI,QAAA,YAAY,EAAE,wBAAM;AAChBE,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,UAAhB;AAEAR,UAAAA,iBAAiB,WAAII,GAAG,CAACI,UAAJ,CAAeC,IAAnB,oDAAjB;AACH,SAPL;AAQI,QAAA,YAAY,EAAE,wBAAM;AAChBT,UAAAA,iBAAiB,IAAjB;AACH,SAVL;AAWI,QAAA,KAAK,EAAE;AACH,qBAAS;AACTU,YAAAA,IAAI,EAAE,SADG;AAETC,YAAAA,OAAO,EAAE;AAFA,WADN;AAKHC,UAAAA,KAAK,EAAE;AACPF,YAAAA,IAAI,EAAE,MADC;AAEPC,YAAAA,OAAO,EAAE;AAFF,WALJ;AASHE,UAAAA,OAAO,EAAE;AACTH,YAAAA,IAAI,EAAE,MADG;AAETC,YAAAA,OAAO,EAAE;AAFA;AATN,SAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADuC;AAAA,KAAnB,CAArB;AAAA,GADH,CADF,CADF,CADF;AAoCD","sourcesContent":["import React from \"react\"\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n} from \"react-simple-maps\"\n\n// url to a valid topojson file\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\n\nexport default function CountryMap({ setTooltipContent }) {\n  return (\n    <div>\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 100 }} width={400} height={300}>\n        <Geographies geography={geoUrl}>\n          {({ geographies }) => geographies.map(geo =>\n            <Geography \n                key={geo.rsmKey} \n                geography={geo} \n                onMouseEnter={() => {\n                    console.log(geo.properties);\n\n                    setTooltipContent(`${geo.properties.NAME}<br><br>Confirmed: <br>Recovered: <br>Deaths: `);\n                }}\n                onMouseLeave={() => {\n                    setTooltipContent(``);\n                }}\n                style={{\n                    default: {\n                    fill: \"#D6D6DA\",\n                    outline: \"none\"\n                    },\n                    hover: {\n                    fill: \"#F53\",\n                    outline: \"none\"\n                    },\n                    pressed: {\n                    fill: \"#E42\",\n                    outline: \"none\"\n                    }\n                }} \n            />\n          )}\n        </Geographies>\n      </ComposableMap>      \n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}