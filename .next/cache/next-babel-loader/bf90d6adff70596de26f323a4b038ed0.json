{"ast":null,"code":"var _jsxFileName = \"/Users/conorogrady/react_workspace/corona/components/CountryMap.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\"; // url to a valid topojson file\n\nvar geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nexport default function CountryMap(_ref) {\n  var setTooltipContent = _ref.setTooltipContent;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(ComposableMap, {\n    \"data-tip\": \"\",\n    projectionConfig: {\n      scale: 155,\n      rotation: [-11, 0, 0]\n    },\n    width: 800,\n    height: 400,\n    style: {\n      width: \"100%\",\n      height: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(Geographies, {\n    geography: geoUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, function (_ref2) {\n    var geographies = _ref2.geographies;\n    return geographies.map(function (geo) {\n      return __jsx(Geography, {\n        key: geo.rsmKey,\n        geography: geo,\n        onMouseEnter: function onMouseEnter() {\n          fetch(\"https://covid19.mathdro.id/api/countries/\".concat(geo.properties.ISO_A2)).then(function (data) {\n            return data.json();\n          }).then(function (result) {\n            console.log(result);\n            setTooltipContent(\"\".concat(geo.properties.NAME, \"<br><br>Confirmed: \").concat(result.confirmed.value.toLocaleString(), \"<br>Recovered: \").concat(result.recovered.value.toLocaleString(), \"<br>Deaths: \").concat(result.deaths.value.toLocaleString()));\n          })[\"catch\"](function (err) {\n            return setTooltipContent(\"\".concat(geo.properties.NAME, \"<br><br>No data available\"));\n          });\n        },\n        onMouseLeave: function onMouseLeave() {\n          setTooltipContent(\"\");\n        },\n        style: {\n          \"default\": {\n            fill: \"#D6D6DA\",\n            outline: \"none\"\n          },\n          hover: {\n            fill: \"#F53\",\n            outline: \"none\"\n          },\n          pressed: {\n            fill: \"#E42\",\n            outline: \"none\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    });\n  })));\n}","map":{"version":3,"sources":["/Users/conorogrady/react_workspace/corona/components/CountryMap.js"],"names":["React","ComposableMap","Geographies","Geography","geoUrl","CountryMap","setTooltipContent","scale","rotation","width","height","geographies","map","geo","rsmKey","fetch","properties","ISO_A2","then","data","json","result","console","log","NAME","confirmed","value","toLocaleString","recovered","deaths","err","fill","outline","hover","pressed"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,QAIO,mBAJP,C,CAMA;;AACA,IAAMC,MAAM,GAAG,wGAAf;AAEA,eAAe,SAASC,UAAT,OAA2C;AAAA,MAArBC,iBAAqB,QAArBA,iBAAqB;AACtD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,aAAD;AACI,gBAAS,EADb;AAEI,IAAA,gBAAgB,EAAE;AACdC,MAAAA,KAAK,EAAE,GADO;AAEdC,MAAAA,QAAQ,EAAE,CAAC,CAAC,EAAF,EAAM,CAAN,EAAS,CAAT;AAFI,KAFtB;AAMI,IAAA,KAAK,EAAE,GANX;AAOI,IAAA,MAAM,EAAE,GAPZ;AAQI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAEN,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA,QAAGO,WAAH,SAAGA,WAAH;AAAA,WAAqBA,WAAW,CAACC,GAAZ,CAAgB,UAAAC,GAAG;AAAA,aACrC,MAAC,SAAD;AACI,QAAA,GAAG,EAAEA,GAAG,CAACC,MADb;AAEI,QAAA,SAAS,EAAED,GAFf;AAGI,QAAA,YAAY,EAAE,wBAAM;AAChBE,UAAAA,KAAK,oDAA6CF,GAAG,CAACG,UAAJ,CAAeC,MAA5D,EAAL,CACKC,IADL,CACU,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,WADd,EAEKF,IAFL,CAEU,UAAAG,MAAM,EAAI;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAf,YAAAA,iBAAiB,WAAIO,GAAG,CAACG,UAAJ,CAAeQ,IAAnB,gCAA6CH,MAAM,CAACI,SAAP,CAAiBC,KAAjB,CAAuBC,cAAvB,EAA7C,4BAAsGN,MAAM,CAACO,SAAP,CAAiBF,KAAjB,CAAuBC,cAAvB,EAAtG,yBAA4JN,MAAM,CAACQ,MAAP,CAAcH,KAAd,CAAoBC,cAApB,EAA5J,EAAjB;AACH,WALL,WAMW,UAAAG,GAAG;AAAA,mBAAIxB,iBAAiB,WAAIO,GAAG,CAACG,UAAJ,CAAeQ,IAAnB,+BAArB;AAAA,WANd;AAOH,SAXL;AAYI,QAAA,YAAY,EAAE,wBAAM;AAChBlB,UAAAA,iBAAiB,IAAjB;AACH,SAdL;AAeI,QAAA,KAAK,EAAE;AACH,qBAAS;AACLyB,YAAAA,IAAI,EAAE,SADD;AAELC,YAAAA,OAAO,EAAE;AAFJ,WADN;AAKHC,UAAAA,KAAK,EAAE;AACHF,YAAAA,IAAI,EAAE,MADH;AAEHC,YAAAA,OAAO,EAAE;AAFN,WALJ;AASHE,UAAAA,OAAO,EAAE;AACLH,YAAAA,IAAI,EAAE,MADD;AAELC,YAAAA,OAAO,EAAE;AAFJ;AATN,SAfX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADqC;AAAA,KAAnB,CAArB;AAAA,GADD,CAVJ,CADA,CADJ;AAiDH","sourcesContent":["import React from \"react\"\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n} from \"react-simple-maps\"\n\n// url to a valid topojson file\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\n\nexport default function CountryMap({ setTooltipContent }) {\n    return (\n        <div>\n        <ComposableMap \n            data-tip=\"\" \n            projectionConfig={{\n                scale: 155,\n                rotation: [-11, 0, 0],\n            }}\n            width={800}\n            height={400}\n            style={{ width: \"100%\", height: \"auto\" }}\n        >\n            <Geographies geography={geoUrl}>\n            {({ geographies }) => geographies.map(geo =>\n                <Geography \n                    key={geo.rsmKey} \n                    geography={geo} \n                    onMouseEnter={() => {\n                        fetch(`https://covid19.mathdro.id/api/countries/${geo.properties.ISO_A2}`)\n                            .then(data => data.json())\n                            .then(result => {\n                                console.log(result)\n                                setTooltipContent(`${geo.properties.NAME}<br><br>Confirmed: ${result.confirmed.value.toLocaleString()}<br>Recovered: ${result.recovered.value.toLocaleString()}<br>Deaths: ${result.deaths.value.toLocaleString()}`);\n                            })\n                            .catch(err => setTooltipContent(`${geo.properties.NAME}<br><br>No data available`))                                                                                                                           \n                    }}\n                    onMouseLeave={() => {\n                        setTooltipContent(``);\n                    }}\n                    style={{\n                        default: {\n                            fill: \"#D6D6DA\",\n                            outline: \"none\"\n                        },\n                        hover: {\n                            fill: \"#F53\",\n                            outline: \"none\"\n                        },\n                        pressed: {\n                            fill: \"#E42\",\n                            outline: \"none\"\n                        }\n                    }} \n                />\n            )}\n            </Geographies>\n        </ComposableMap>      \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}